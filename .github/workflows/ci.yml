name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  # XXX TODO DEFINE PER CI JOB
  RUSTFLAGS: --cfg portable_io_unstable_all

jobs:
  # General TODO items:
  # - try Rust clippy (should avoid all warnings)
  # - check for build & test warnings
  # - enforce consistent Rust fmt (if possible without affecting too much code)
  test:
    strategy:
      # XXX TBD ??? ???
      fail-fast: false
      matrix:
        include:
          - rust: nightly
          - os: macos-latest
            rust: nightly
          - os: windows-latest
            rust: nightly
          - rust: nightly-2024-07-01
          - rust: nightly-2023-07-01
            test-options: --all-targets # SKIP doc tests
          - rust: nightly-2022-08-24 # MSRV (nightly)
            test-options: --all-targets # SKIP doc tests
          # TEST with these Rust nightly versions to check for correct rustversion conditions in `src/readbuf.rs`
          - rust: nightly-2024-02-17
            test-options: --all-targets # SKIP doc tests
          - rust: nightly-2024-02-16
            test-options: --all-targets # SKIP doc tests
          - rust: nightly-2024-02-15
            test-options: --all-targets # SKIP doc tests
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v4
      - run: rustup default ${{ matrix.rust }}
      - run: cargo test --features alloc ${{ matrix.test-options }} --verbose
      - run: cargo test --all-features ${{ matrix.test-options }} --verbose
        if: (!startsWith(matrix.os, 'windows'))

  build:
    strategy:
      # XXX TBD ??? ???
      fail-fast: false
      matrix:
        include:
          - rust: nightly
          - os: macos-latest
            rust: nightly
          - os: windows-latest
            rust: nightly
          - rust: nightly-2024-07-01
          - rust: nightly-2023-07-01
          - rust: nightly-2022-08-24 # MSRV (nightly)
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v4
      - run: rustup default nightly
      - run: cargo build --features alloc --verbose
        env:
          # XXX TODO REWORK NEEDED
          RUSTFLAGS: --cfg portable_io_unstable_all --deny warnings --allow dead-code --allow unused-variables --allow stable-features --allow internal-features --allow incomplete-features --allow unexpected-cfgs
      - run: cargo build --all-features --verbose
        if: (!startsWith(matrix.os, 'windows'))
        env:
          # XXX TODO REWORK NEEDED
          RUSTFLAGS: --cfg portable_io_unstable_all --deny warnings --allow dead-code --allow unused-variables --allow stable-features --allow internal-features --allow incomplete-features --allow unexpected-cfgs

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup default nightly
      - run: rustup component add clippy
      # XXX TODO REWORK NEEDED
      - run: cargo clippy --all-features -- --deny warnings --allow clippy::redundant-guards --allow clippy::needless-lifetimes --allow clippy::mem-replace-with-default --allow clippy::explicit-auto-deref --allow dead-code --allow unused-variables --allow stable-features --allow internal-features --allow incomplete-features --allow unexpected-cfgs

  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup default nightly
      - run: cargo doc --all-features
